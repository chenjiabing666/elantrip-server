<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yilan.elantrip.dao.MessageMapper">
	<resultMap id="BaseResultMap"
		type="com.yilan.elantrip.domain.Message">
		<id column="message_id" property="messageId" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="message_type_id" property="messageTypeId"
			jdbcType="INTEGER" />
		<result column="user_type" property="userType"
			jdbcType="VARCHAR" />
		<result column="message_content" property="messageContent"
			jdbcType="VARCHAR" />
		<result column="from_user" property="fromUser"
			jdbcType="VARCHAR" />
		<result column="activated" property="activated"
			jdbcType="INTEGER" />
		<result column="deleted" property="deleted" jdbcType="INTEGER" />
		<result column="created_datetime" property="createdDatetime"
			jdbcType="TIMESTAMP" />
		<result column="updated_datetime" property="updatedDatetime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="RSmessage"
		type="com.yilan.elantrip.domain.rs.RSmessageImage">
		<result column="message_id" property="messageId" />
		<result column="message_type_id" property="typeId" />
		<result column="user_type" property="userClassifyName" />
		<result column="message_content" property="messageContent" />
		<result column="created_datetime" property="createdDatetime" />
		<result column="from_user" property="fromUser" />
		<collection property="messageImages"
			ofType="com.yilan.elantrip.domain.MessageImage">
			<result column="image_url" property="imageUrl" />
		</collection>
	</resultMap>
	<resultMap id="messageCount"
		type="com.yilan.elantrip.domain.rs.MessageCount">
		<result column="message_id" property="messageId" />
		<result column="messageCount" property="count" />
	</resultMap>
	<sql id="Base_Column_List">
		message_id, title, message_type_id, user_type,
		message_content, from_user,
		activated,
		deleted, created_datetime,
		updated_datetime
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_message
		where message_id = #{messageId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from t_message
		where message_id =
		#{messageId,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.yilan.elantrip.domain.Message">
		<selectKey resultType="java.lang.Integer"
			keyProperty="messageId" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_message (title, message_type_id, user_type,
		message_content, from_user, activated,
		deleted, created_datetime,
		updated_datetime
		)
		values (#{title,jdbcType=VARCHAR},
		#{messageTypeId,jdbcType=INTEGER},
		#{userType,jdbcType=VARCHAR},
		#{messageContent,jdbcType=VARCHAR}, #{fromUser,jdbcType=VARCHAR},
		#{activated,jdbcType=INTEGER},
		#{deleted,jdbcType=INTEGER},
		#{createdDatetime,jdbcType=TIMESTAMP},
		#{updatedDatetime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.yilan.elantrip.domain.Message">
		<selectKey resultType="java.lang.Integer"
			keyProperty="messageId" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="title != null">
				title,
			</if>
			<if test="messageTypeId != null">
				message_type_id,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="messageContent != null">
				message_content,
			</if>
			<if test="fromUser != null">
				from_user,
			</if>
			<if test="activated != null">
				activated,
			</if>
			<if test="deleted != null">
				deleted,
			</if>
			<if test="createdDatetime != null">
				created_datetime,
			</if>
			<if test="updatedDatetime != null">
				updated_datetime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="messageTypeId != null">
				#{messageTypeId,jdbcType=INTEGER},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=VARCHAR},
			</if>
			<if test="messageContent != null">
				#{messageContent,jdbcType=VARCHAR},
			</if>
			<if test="fromUser != null">
				#{fromUser,jdbcType=VARCHAR},
			</if>
			<if test="activated != null">
				#{activated,jdbcType=INTEGER},
			</if>
			<if test="deleted != null">
				#{deleted,jdbcType=INTEGER},
			</if>
			<if test="createdDatetime != null">
				#{createdDatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedDatetime != null">
				#{updatedDatetime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.yilan.elantrip.domain.Message">
		update t_message
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="messageTypeId != null">
				message_type_id = #{messageTypeId,jdbcType=INTEGER},
			</if>
			<if test="userType != null">
				user_type = #{userType,jdbcType=VARCHAR},
			</if>
			<if test="messageContent != null">
				message_content = #{messageContent,jdbcType=VARCHAR},
			</if>
			<if test="fromUser != null">
				from_user = #{fromUser,jdbcType=VARCHAR},
			</if>
			<if test="activated != null">
				activated = #{activated,jdbcType=INTEGER},
			</if>
			<if test="deleted != null">
				deleted = #{deleted,jdbcType=INTEGER},
			</if>
			<if test="createdDatetime != null">
				created_datetime = #{createdDatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedDatetime != null">
				updated_datetime = #{updatedDatetime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where message_id = #{messageId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.yilan.elantrip.domain.Message">
		update t_message
		set title = #{title,jdbcType=VARCHAR},
		message_type_id = #{messageTypeId,jdbcType=INTEGER},
		user_type =
		#{userType,jdbcType=VARCHAR},
		message_content =
		#{messageContent,jdbcType=VARCHAR},
		from_user =
		#{fromUser,jdbcType=VARCHAR},
		activated =
		#{activated,jdbcType=INTEGER},
		deleted = #{deleted,jdbcType=INTEGER},
		created_datetime = #{createdDatetime,jdbcType=TIMESTAMP},
		updated_datetime = #{updatedDatetime,jdbcType=TIMESTAMP}
		where
		message_id = #{messageId,jdbcType=INTEGER}
	</update>

	<select id="countTotal" resultType="java.lang.Integer">
		SELECT count(*) FROM
		t_message
	</select>
	<select id="selectMessageList"
		resultType="com.yilan.elantrip.domain.rs.RSmessage">
		SELECT
		m.message_id as messageId,
		m.message_type_id as
		typeId,
		m.user_type as userClassifyName,
		m.message_content as
		messageContent,
		m.created_datetime as createdDatetime,
		m.from_user as
		fromUser
		FROM
		t_message m
		order by messageId asc
		limit
		#{startNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</select>
	<select id="selectMessageDetail" resultMap="BaseResultMap">
		SELECT
		m.message_id,
		m.title,
		m.user_type,
		m.message_type_id,
		m.message_content,
		m.created_datetime,
		m.from_user
		FROM
		t_message m
		where
		m.message_id = #{messageId}
	</select>
	<select id="getMessageCountGroupByMessageId"
		resultMap="messageCount">
		select um.message_id,count(um.message_id) as messageCount
		from t_user_message um
		group by message_id order by message_id asc
	</select>
	<select id="getMessageImage" resultType="java.lang.String">
		select
		image_url
		from
		t_message_image
		where
		message_id=#{messageId}
	</select>

	<select id="getUserMessageCountTotal"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		t_message m,
		t_user_message um
		WHERE
		um.message_id = m.message_id
		AND um.to_user_id = #{params.userId}
	</select>
	<select id="selectUserMessageList" resultMap="BaseResultMap">
		SELECT
		m.message_id,
		m.title,
		m.message_content,
		m.created_datetime
		from
		t_user_message um,
		t_message m
		WHERE
		um.message_id = m.message_id
		AND
		um.to_user_id = #{params.userId}
		limit
		#{startNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</select>
</mapper>